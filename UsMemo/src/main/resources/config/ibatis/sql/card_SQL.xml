<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap 
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Card">
	<typeAlias alias="card" type="com.twogether.usMemo.dto.Card" />
	<typeAlias alias="listAndCard" type="com.twogether.usMemo.dto.ListAndCard" />


	<parameterMap id="cardParamMap" class="card">
		<parameter property="name" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  		<parameter property="memId" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  		<parameter property="lNum" jdbcType="NUMBER" javaType="java.lang.Integer" mode="IN"/>
 	</parameterMap> 
 	
	<resultMap id="CardMap" class="card">
		<result property="num" column="num" />
		<result property="memId" column="memId" />
		<result property="lNum" column="lNum" />
		<result property="name" column="name" />
		<result property="content" column="content" />
		<result property="attach" column="attach" />
		<result property="n_date" column="n_date" />
		<result property="llink" column="llink" />
		<result property="rlink" column="rlink" />
	</resultMap>

	<resultMap id="ListAndCardMap" class="listAndCard">
		<result property="list_num" column="list_num" />
		<result property="list_name" column="list_name" />
		<result property="bNum" column="bNum" />
		<result property="card_num" column="card_num" />
		<result property="card_name" column="card_name" />
		<result property="content" column="content" />
		<result property="attach" column="attach" />
		<result property="memId" column="memId" />
		<result property="n_date" column="n_date" />
		<result property="lNum" column="lNum" />
		<result property="llink" column="llink" />
		<result property="rlink" column="rlink" />
	</resultMap>


<!-- 	<select id="getCardBylNum" parameterClass="int" resultMap="CardMap">
		select * from card where lNum=#lNum# order by location asc
	</select> -->

	<select id="getCardBybNum" parameterClass="int" resultMap="ListAndCardMap">
		select L.num as list_num, L.name as list_name, L.bNum, 
		C.num as card_num, C.name as card_name,
		C.content,C.attach,C.memId,C.n_date,C.lNum,C.llink, C.rlink
		from List L Inner Join Card C
		on L.num=C.lNum
		where L.bNum=#bNum# Order by L.num asc , C.llink asc
	</select>
	<procedure id="addCard" parameterMap="cardParamMap">
		{ call addCardProcedure(?,?,?) }
	</procedure>

	<update id="update_rlink" parameterClass="card">
		update card set	rlink=#rlink# where num=#num#
	</update>
	<update id="update_llink" parameterClass="card">
		update card set	llink=#llink# where num=#num#
	</update>
	<update id="update_allLink" parameterClass="card">
		update card set	llink=#llink#, rlink=#rlink# where num=#num#
	</update>
	<update id="update_lNum" parameterClass="card">
		update card set	lNum=#lNum# where num=#num#
	</update>
	
	
<!-- 	
	<insert id="addCard" parameterClass="card">
		<selectKey keyProperty="location" resultClass="int" >
	        select NVL(max(location)+1,1) from card where lNum=#lNum#
	    </selectKey>
		insert into card values(card_num_seq.nextval,#name#,null,null,#memId#,sysdate,#lNum#,#location#)
	</insert>
-->	
	<delete id="deleteCardBybNum" parameterClass="int">
	    <!-- card.lNum=list.num이 같으면서 전달받은 bNum의 값이 list.bNum값과 같은 card의 행 모두 삭제  -->
	    delete from card where exists (select 1 from list where card.lNum = list.num and list.bNum=#bNum#)
	</delete> 
	
	<select id="getCardInfoBycNum" parameterClass="int">	    
	    
	   select * from card where num=#cNum#

	</select>


</sqlMap>
	